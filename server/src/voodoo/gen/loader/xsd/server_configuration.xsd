<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	elementFormDefault="qualified"
	targetNamespace="http://www.weblab.deusto.es/configuration"
	xmlns:tns="http://www.weblab.deusto.es/configuration"
	>
	
	<xs:element name="server">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="configuration" minOccurs="0" maxOccurs="unbounded" type="tns:configuration_type"/>
				<xs:element name="type" type="tns:type_type"/>
				<xs:element name="methods" type="tns:type_type"/>
				<xs:element name="implementation" type="tns:python_path_type"/>
				<xs:element name="restriction" minOccurs="0" maxOccurs="unbounded" type="xs:string"/>
				<xs:element name="protocols" type="tns:protocols_type"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="configuration_type">
		<xs:complexContent>
			<xs:extension base="xs:anyType">
				<xs:attribute name="file" use="required" type="xs:string"/>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:simpleType name="type_type">
		<xs:restriction base="xs:string">
			<!-- A possible python type is: my.packages.data_reader.-->
			<!-- TODO: improve the pattern (don't allow .., don't allow just numbers between two points... for instance)-->
			<xs:pattern value="([a-zA-Z0-9_\.])+::([a-zA-Z0-9_])+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="python_path_type">
		<xs:restriction base="xs:string">
			<!-- A possible python type is: my.packages.data_reader.-->
			<!-- TODO: improve the pattern (don't allow .., don't allow just numbers between two points... for instance)-->
			<xs:pattern value="([a-zA-Z0-9_\.-])+"/>
		</xs:restriction>
	</xs:simpleType>

	<!-- PROTOCOLS TYPES -->
	<xs:complexType name="protocols_type">
		<xs:sequence>
			<xs:element ref="tns:protocol" maxOccurs="unbounded"/> 
		</xs:sequence>
	</xs:complexType>

	<xs:element name="protocol">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="tns:protocol_type">
					<xs:attribute name="name"  use="required" type="tns:protocol_names"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="protocol_type">
		<xs:sequence>
			<xs:element name="coordinations" type="tns:coordinations_type" />
			<xs:element name="creation">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="parameter" type="tns:parameter_type" minOccurs="0" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	
	<xs:complexType name="coordinations_type">
		<xs:complexContent>
			<xs:restriction base="xs:anyType">
				<xs:sequence>
					<xs:element name="coordination" type="tns:coordination_type" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="coordination_type">
		<xs:complexContent>
			<xs:restriction base="xs:anyType">
				<xs:sequence>
					<xs:element name="parameter" type="tns:parameter_type" minOccurs="0" maxOccurs="unbounded" />
				</xs:sequence>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	
	<xs:complexType name="parameter_type">
		<xs:attribute name="name"  use="required" type="xs:string"/>
		<xs:attribute name="value" use="required" type="xs:string"/>
	</xs:complexType>
	
	<!-- Add new protocols here -->
	<xs:simpleType name="protocol_names">
		<xs:restriction base="xs:string">
			<xs:enumeration value="Direct"/>
			<xs:enumeration value="SOAP"/>
			<xs:enumeration value="InternetSocket"/>
			<xs:enumeration value="UnixSocket"/>
			<xs:enumeration value="XMLRPC"/>
		</xs:restriction>
	</xs:simpleType>
	
</xs:schema>

